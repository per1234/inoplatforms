# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/check-npm-task.md
name: Check npm

# See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  create:
  push:
    paths:
      - ".github/workflows/check-npm-task.ya?ml"
      - "**/.npmrc"
      - "**/package.json"
      - "**/package-lock.json"
      - "go.mod"
      - "go.sum"
      - "Taskfile.ya?ml"
      - "tools.go"
  pull_request:
    paths:
      - ".github/workflows/check-npm-task.ya?ml"
      - "**/.npmrc"
      - "**/package.json"
      - "**/package-lock.json"
      - "go.mod"
      - "go.sum"
      - "Taskfile.ya?ml"
      - "tools.go"
  schedule:
    # Run every Tuesday at 8 AM UTC to catch breakage resulting from changes to the JSON schema.
    - cron: "0 8 * * TUE"
  workflow_dispatch:
  repository_dispatch:

jobs:
  run-determination:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="refs/heads/[0-9]+.[0-9]+.x"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[
            "${{ github.event_name }}" != "create" ||
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "result=$RESULT" >> $GITHUB_OUTPUT

  validate:
    name: validate (${{ matrix.package.path }})
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        package:
          - path: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Install Task
        run: |
          go \
            install \
              github.com/go-task/task/v3/cmd/task

      - name: Validate package.json
        env:
          NPM_PACKAGE_PATH: ${{ matrix.package.path }}
        run: task --silent npm:validate

  check-sync:
    name: check-sync (${{ matrix.package.path }})
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        package:
          - path: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Install Task
        run: |
          go \
            install \
              github.com/go-task/task/v3/cmd/task

      - name: Install npm dependencies
        env:
          NPM_PACKAGE_PATH: ${{ matrix.package.path }}
        run: task npm:install-deps

      - name: Check package-lock.json
        run: git diff --color --exit-code package-lock.json
